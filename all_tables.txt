CREATE TABLE players (
    player_id SERIAL PRIMARY KEY,
    first_name VARCHAR(30) NOT NULL,
    last_name VARCHAR(30) NOT NULL,
    preferred_name VARCHAR(20),
    year_of_birth INT NOT NULL CHECK (year_of_birth > 1900),
    email VARCHAR(30) UNIQUE NOT NULL,
    account_balance DECIMAL(10, 2) DEFAULT 0
);

CREATE TABLE pitches (
    pitch_id SERIAL PRIMARY KEY,
    pitch_name VARCHAR(30) NOT NULL,
    pitch_number INT,
    address VARCHAR(50),
    postcode VARCHAR(8) CHECK (postcode ~ '^[A-Z0-9 ]{5,8}$'), 
    price_per_person FLOAT,
);

CREATE TABLE matches (
    match_id SERIAL PRIMARY KEY, 
    match_date DATE NOT NULL,
    match_time TIME NOT NULL,
    price FLOAT NOT NULL,
    number_of_players INT NOT NULL CHECK (number_of_players > 0),
    pitch_id INT NOT NULL REFERENCES pitches(pitch_id) ON DELETE SET NULL,
    match_status VARCHAR(15) NOT NULL, 
    signin_begin_time TIME NOT NULL
);

CREATE TABLE match_players (
    match_id INT NOT NULL REFERENCES matches(match_id) ON DELETE CASCADE,
    player_id INT NOT NULL REFERENCES players(player_id) ON DELETE CASCADE,
    goals INT DEFAULT 0 CHECK (goals >= 0),
    assists INT DEFAULT 0 CHECK (assists >= 0),
    defcons INT DEFAULT 0 CHECK (defcons >= 0),
    late BOOLEAN DEFAULT FALSE,
    price FLOAT NOT NULL,
    team_id INT CHECK (team_id = 1 OR team_id = 2),
    PRIMARY KEY (match_id, player_id)
);
CREATE TABLE attributes (
    player_id INT PRIMARY KEY REFERENCES players(player_id) ON DELETE CASCADE,
    dribbling INT DEFAULT 0 CHECK (dribbling BETWEEN 0 AND 100),
    finishing INT DEFAULT 0 CHECK (finishing BETWEEN 0 AND 100),
    first_touch INT DEFAULT 0 CHECK (first_touch BETWEEN 0 AND 100),
    long_shots INT DEFAULT 0 CHECK (long_shots BETWEEN 0 AND 100),
    movement INT DEFAULT 0 CHECK (movement BETWEEN 0 AND 100),
    short_passing INT DEFAULT 0 CHECK (short_passing BETWEEN 0 AND 100),
    long_passing INT DEFAULT 0 CHECK (long_passing BETWEEN 0 AND 100),
    vision INT DEFAULT 0 CHECK (vision BETWEEN 0 AND 100),
    tackling INT DEFAULT 0 CHECK (tackling BETWEEN 0 AND 100),
    positioning INT DEFAULT 0 CHECK (positioning BETWEEN 0 AND 100),
    marking INT DEFAULT 0 CHECK (marking BETWEEN 0 AND 100),
    aggression INT DEFAULT 0 CHECK (aggression BETWEEN 0 AND 100),
    concentration INT DEFAULT 0 CHECK (concentration BETWEEN 0 AND 100),
    decision_making INT DEFAULT 0 CHECK (decision_making BETWEEN 0 AND 100),
    leadership INT DEFAULT 0 CHECK (leadership BETWEEN 0 AND 100),
    consistency INT DEFAULT 0 CHECK (consistency BETWEEN 0 AND 100),
    stamina INT DEFAULT 0 CHECK (stamina BETWEEN 0 AND 100),
    pace INT DEFAULT 0 CHECK (pace BETWEEN 0 AND 100),
    strength INT DEFAULT 0 CHECK (strength BETWEEN 0 AND 100),
    workrate INT DEFAULT 0 CHECK (workrate BETWEEN 0 AND 100),
    teamwork INT DEFAULT 0 CHECK (teamwork BETWEEN 0 AND 100)
);

CREATE TABLE payments (
    payment_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES players(player_id),
    amount DECIMAL(10, 2) NOT NULL,
    payment_date TIMESTAMP NOT NULL,
    transaction_id VARCHAR(50) UNIQUE NOT NULL,
    description VARCHAR(100)
);

CREATE TABLE feedback (
    feedback_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES players(player_id) ON DELETE SET NULL, -- Optional, NULL for anonymous
    name VARCHAR(100), -- Stores the name of the user (optional)
    comment TEXT NOT NULL, -- Stores the feedback content
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Timestamp of feedback
    is_anonymous BOOLEAN DEFAULT FALSE -- Flag for anonymous feedback
);

CREATE TABLE replies (
    reply_id SERIAL PRIMARY KEY,
    feedback_id INT REFERENCES feedback(feedback_id) ON DELETE CASCADE,
    user_id INT REFERENCES players(player_id) ON DELETE SET NULL, -- Nullable for anonymous replies
    name VARCHAR(100), -- Optional, null for anonymous replies
    reply_content TEXT NOT NULL, -- Reply content
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);